/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { QueryUtils, QueryUtilsInterface } from "../QueryUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_lowerBound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_upperBound",
        type: "uint256",
      },
    ],
    name: "AmlBetweenExclusive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_lowerBound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_upperBound",
        type: "uint256",
      },
    ],
    name: "AmlBetweenInclusive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_lowerBound",
        type: "uint256",
      },
    ],
    name: "AmlGreaterThan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_lowerBound",
        type: "uint256",
      },
    ],
    name: "AmlGreaterThanEqual",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_expectedInt",
        type: "uint256",
      },
    ],
    name: "AmlIsEqual",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_upperBound",
        type: "uint256",
      },
    ],
    name: "AmlLessThan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_upperBound",
        type: "uint256",
      },
    ],
    name: "AmlLessThanEqual",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_expectedString",
        type: "string",
      },
    ],
    name: "CountryIsEqual",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_startingHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_iteratorThreshold",
        type: "uint256",
      },
    ],
    name: "CredProtocolScoreIteratorLessThan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
    ],
    name: "IsBusinessFalse",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_attrValue",
        type: "bytes32",
      },
    ],
    name: "IsBusinessTrue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61052861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100d35760003560e01c80638e40c5721161008b578063bf44459711610065578063bf444597146101a1578063d507241c146101d4578063ef652bd2146101e757600080fd5b80638e40c5721461014a578063a1ff35131461017d578063a24c68fc1461018f57600080fd5b80635a0c89c6116100bc5780635a0c89c61461011157806370da5acf146101245780638b09a7aa1461013757600080fd5b806339763507146100d8578063403a0476146100ff575b600080fd5b6100eb6100e63660046102da565b6101fa565b604051901515815260200160405180910390f35b6100eb61010d3660046102da565b1490565b6100eb61011f3660046102fc565b610205565b6100eb6101323660046102da565b111590565b6100eb610145366004610357565b61027b565b6100eb610158366004610430565b7fa357fcb91396b2afa7ab60192e270c625a2eb250b8f839ddb179f207b40459b41490565b6100eb61018b3660046102da565b1090565b6100eb61019d3660046102da565b1190565b6100eb6101af366004610430565b7f7749ed7587e6dbf171ce6be50bea67236732d7ccfd51e327bc28b612ec06faa71490565b6100eb6101e23660046102fc565b6102ae565b6100eb6101f53660046102fc565b6102c6565b808211155b92915050565b60008083815b606481101561026c578682036102275750508210159050610274565b6040805160208101849052016040516020818303038152906040528051906020012091506001836102589190610478565b9250806102648161048b565b91505061020b565b506000925050505b9392505050565b60008160405160200161028e91906104c3565b604051602081830303815290604052805190602001208314905092915050565b600081841080156102be57508284115b949350505050565b60008184118015906102be57505050111590565b600080604083850312156102ed57600080fd5b50508035926020909101359150565b60008060006060848603121561031157600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561036a57600080fd5b82359150602083013567ffffffffffffffff8082111561038957600080fd5b818501915085601f83011261039d57600080fd5b8135818111156103af576103af610328565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103f5576103f5610328565b8160405282815288602084870101111561040e57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561044257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156101ff576101ff610449565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104bc576104bc610449565b5060010190565b6000825160005b818110156104e457602081860181015185830152016104ca565b50600092019182525091905056fea26469706673582212205b73ba6e8a0e6ae9e52ce361689b2233ae152a3d590270525dee395a930343ff64736f6c63430008100033";

export class QueryUtils__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueryUtils> {
    return super.deploy(overrides || {}) as Promise<QueryUtils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QueryUtils {
    return super.attach(address) as QueryUtils;
  }
  connect(signer: Signer): QueryUtils__factory {
    return super.connect(signer) as QueryUtils__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueryUtilsInterface {
    return new utils.Interface(_abi) as QueryUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueryUtils {
    return new Contract(address, _abi, signerOrProvider) as QueryUtils;
  }
}
